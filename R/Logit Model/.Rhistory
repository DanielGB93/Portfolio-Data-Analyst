library(readxl)
PAP_Student <- read_excel("Cursos/R/PAP_Student.xlsx")
View(PAP_Student)
View(PAP_Student)
View(PAP_Student)
library(Rcmdr)
#===================================
#Diplomado: Estadistica Aplicada
#Nombre: Daniel García
#Fecha: 15/10/2022
# Tema: Introducción a herramientas básicas de R y manipulación de bases de
#datos
#===================================
#1. Area de trabajo
setwd("C:/Users/pc/Documents/Cursos/Estadística Aplicada- GEM/Modelamiento
#estadístico/Sesión 02")
setwd("C:/Users/pc/Documents/Cursos/Estadística Aplicada- GEM/Modelamiento
#estadístico/Sesión 02")
#Comando summarise (calculo estadístico)
help(dplyer)
#Comando summarise (calculo estadístico)
??dplyer
#Comando summarise (calculo estadístico)
?dplyer
install.packages("ggplot2") #Paso 1: Instalación
library(ggplot2) #Paso2: Activación
library(help= ggplot2) #Verificar si está instalada
#Exportacion de bases de datos
install.packages("writexl")
library(writexl)
#===================================================
# 4. Manipulación y transformación de bases de datos
#===================================================
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(help= dplyr)
base <- movies
base <- movies
library(ggplot2movies)
base <- movies
#Comando summarise (calculo estadístico)
?dplyer
#Comando summarise (calculo estadístico)
summarise(base, promedio= mean(rating))
summarise(base, promedio= median(rating))
summarise(base, mediana= median(rating))
summarise(base, mediana= median(rating))
library(dplyr)
library(ggplot2)
library(stargazer)
setwd("C:/Users/pc/Documents/Cursos/Estadística Aplicada- GEM/Modelamiento estadístico/Sesion09")
getwd()
datos
datos <- read.csv("datos.csv")
datos <- read.csv("datos.csv")
View(datos)
str(datos)
base
base <-  datos %>%
select(clasificador = Status, antiguedad= Seniority, vivienda= Home,
edad= Age,civil=Marital, trabajo= Job, gasto= Expenses, ingreso= Income
deuda= Debt, cantidad= Amount, ahorro= Savings)
base <-  datos %>%
select(clasificador = Status, antiguedad= Seniority, vivienda= Home,
edad= Age,civil=Marital, trabajo= Job, gasto= Expenses, ingreso= Income,
deuda= Debt, cantidad= Amount, ahorro= Savings)
View(base)
base <-  datos %>%
select(clasificador = Status, antiguedad= Seniority, vivienda= Home,
edad= Age,civil=Marital, trabajo= Job, gasto= Expenses, ingreso= Income,
deuda= Debt, cantidad= Amount, ahorro= Savings) %>%
mutate(clasificador= if_else(clasificador== "good",1,0))#recodificacion y conversion a factor
View(base)
base <-  datos %>%
select(clasificador = Status, antiguedad= Seniority, vivienda= Home,
edad= Age,civil=Marital, trabajo= Job, gasto= Expenses, ingreso= Income,
deuda= Debt, cantidad= Amount, ahorro= Savings) %>%
mutate(clasificador= if_else(clasificador== "good",1,0)) %>%#recodificacion y conversion a factor
mutate(clasificador=factor(clasificador, levels=c(0,1), labels=c("Mal pagador", "Buen pagador")))
View(base)
base <-  datos %>%
select(clasificador = Status, antiguedad= Seniority, vivienda= Home,
edad= Age,civil=Marital, trabajo= Job, gasto= Expenses, ingreso= Income,
deuda= Debt, cantidad= Amount, ahorro= Savings) %>%
mutate(clasificador= if_else(clasificador== "good",1,0)) %>%#recodificacion y conversion a factor
mutate(clasificador=factor(clasificador, levels=c(0,1), labels=c("Mal pagador", "Buen pagador")),
vivienda= as.factor(vivienda),civil=as.factor(civil),
trabajo= as.factor(trabajo))
str(base)
#====================
#Análisis descriptivo
#====================
install.packages("descr")
library(descr)
crosstab(base$clasificador, base$trabajo)
crosstab(base$clasificador, base$trabajo, prop.r = T)
crosstab(base$clasificador, base$trabajo, prop.c = T)
library(descr)"", "tipo de trabajo
crosstab(base$clasificador, base$trabajo, prop.c = T, dnn= c("Clasificador", "tipo de trabajo"))
#===================
#Análisis gráfico
#===================
base %>%
ggplot(aes(x=clasificador, y=ingreso))+
geom_boxplot(aes(color=clasificador), outlier.colour = "blue",
outlier.size = 3)
#===================
#Análisis gráfico
#===================
base %>%
ggplot(aes(x=clasificador, y=ingreso))+
geom_boxplot(aes(color=clasificador), outlier.colour = "blue",
outlier.size = 3)+
scale_color_manual(values=c("#c70039", "#0F2BF9"))+
theme_minimal()+
labs(title= "Gráfico de cajas de salarios segun tipo de clasificador")
#===================
#Análisis gráfico
#===================
base %>%
ggplot(aes(x=clasificador, y=ingreso))+
geom_boxplot(aes(color=clasificador), outlier.colour = "blue",
outlier.size = 3)+
scale_color_manual(values=c("#c70039", "#0F2BF9"))+
theme_minimal()+
labs(title= "Gráfico de cajas de salarios segun tipo de clasificador")+
coord_flip()
#===================
#Análisis gráfico
#===================
base %>%
ggplot(aes(x=clasificador, y=gasto))+
geom_boxplot(aes(color=clasificador), outlier.colour = "blue",
outlier.size = 3)+
scale_color_manual(values=c("#c70039", "#0F2BF9"))+
theme_minimal()+
labs(title= "Gráfico de cajas de salarios segun tipo de clasificador")+
coord_flip()
#===================
#Análisis gráfico
#===================
base %>%
ggplot(aes(x=clasificador, y=ingreso))+
geom_boxplot(aes(color=clasificador), outlier.colour = "blue",
outlier.size = 3)+
scale_color_manual(values=c("#c70039", "#0F2BF9"))+
theme_minimal()+
labs(title= "Gráfico de cajas de salarios segun tipo de clasificador", caption="Elaboracion propia")+
coord_flip()
#=========================
#Modelo Estadístico: Logit
#=========================
logit <- gml(clasificador ~ antiguedad + vivienda+ edad+ civil +trabajo + gasto
+ ingreso + deuda+ cantidad+ ahorro, data= base)
summary(logit)
summary(logit)
#=========================
#Modelo Estadístico: Logit
#=========================
logit <- glm(clasificador ~ antiguedad + vivienda+ edad+ civil +trabajo + gasto
+ ingreso + deuda+ cantidad+ ahorro, data= base, family= binomial(link = "logit"))
summary(logit)
#=========================
#Modelo Estadístico: Logit
#=========================
options(scipen=999) #para apagar la notacion cientifica
logit <- glm(clasificador ~ antiguedad + vivienda+ edad+ civil +trabajo + gasto
+ ingreso + deuda+ cantidad+ ahorro, data= base, family= binomial(link = "logit"))
summary(logit)
